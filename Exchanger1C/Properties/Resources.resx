<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picturexls" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFcAAAB5CAYAAABMbr0qAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABUpSURBVHhe7V1/qGXVdT7z3tx7n9N0NGJEjY4z8+45bxw1TqdmaqWEIFJEgpQgpUiREsQ/ioQy
        hCJBDGJtSUNqrX9o4o83M++eM/NmageZmGCFSigiRUREJIiIhEEkhBAGERlE0m+tvdY+a++7733n3Xvf
        Hed5F3zsX2vvvfZ31llnn/PuOS8bJltWr8kWyvxAp8wfWKiKR5IoE3VNMU7fJljn+Fjnfe2qe3F2XAjY
        MHkwyzDZjcAnmPgPA1Hm6fpxUSbqpgCs971O1d2zsQQ/mcFri/t5kcMWqm2qF5dj3bieDk5QFsRlW2/b
        rd7AfDRH0Capgtvy9ztVvoccbGMERw4TPRh4ZspAMpyNN3oELTN5URv3aVKmNAEe0+oStBzXk67JM7Rd
        UmujtxUEl/DgHwgfE5VVIVcnTMEaG9fbshLh83E7EIwh+VhP59MxmASB1fHtRofbjZ7Xt31NP5ThvY7g
        iYv3XJqcJhWU+ZuIS3d3esVd5z3K/IRZVzKFDggu9gorE5IUuUgx2cMbfzWdjoDAb/G6FKETCWjNxa8n
        S7Al1xiAU+Vh0TjvBeTdXq9NPHYAsG4QnE+I4GGeu0kkIDdyomDdAufB+XXSfQxRcnmiOg5tPnLVY6NU
        1xxBPHhMgpOeS+QWmzQsRIg92dSPT7BuxTio69GkgTcpubxOt0Zda1Cn9aILck9jmzYiwbHnCjZfWAjX
        x7B1SmishzI8+DQwAsFftJira1RwWWHqA/CNBjw4/5oM2VC852Jwf8Q2IbnWG2WNdaqIdRSuDQR/sD6C
        reeao7dpPbfPQ+P6lF6dZ4KrfJ8MvYbYmOsH40E27wWNUy1L2gSiKwTvl+GHSOC5BExOpwB57oY8KZq+
        hOTqOg2oLq63Zc2bOvBDIWINgoMLWtB5c5IbI0FcH+I2KcN73wVP22SahKRiLk4d3EQ89IUgtxFs/DUA
        ycO918dcCgd1PNpUntsTcsnj1AtlB9BXpryWgzy1Gx1pB083yzQJ8Z4rA0jHzURup9fdjfWc5bV56Hot
        bNsgnRAY9y9kmoR4z8VgerTc0dlMYYH+CEsPzX+J/BuMSmDzthyl6PsW8KnjBzyJB3eqooHnsnJwRB7a
        uD/cnQM5VWTZ0evnsuN7+7FqUoUtI7/leHcrOHnJk8ueTWGhCbncyXWgdDM9FZuIHL9mDrw873lSzy2L
        BmHBkkudNtFNxEQE3guPdeQaroaT6x851h3I7XEKzMi1Ysk1XMEJ17NbcPFkMz3PnYjYsMAQnpptxeqj
        QeksLETCnmtiLhMMnnpNyDVXQO4089xQfFiwPCF89rpDyE3GXHb3GblW4phb89SUXBwVTmfk9sl45BKx
        NWZhIZKAXMNTo5sIPRr1VXBGrpVBF7TGd2gGM3IjGYlcDQuibDrNyLViybU8VcVNopEQT64LB77TjNxQ
        bMz1oK1Y3oRc24mOCMLCJnnkOBHBHRpCZU2uv6ANI/cn/MLJPVCkZ5WfEUAs8vnfZ8/tFqWZZKdyIveU
        J5fPdNpVDSMX0jmySM8q96HTjQR02NfudbdK80xITpDnFjW5dFGjfe5a5M6kgQT7XAHynaMzcseXQeT6
        mPv8V8i9s+yF7lz2wqJA8j+ndEA+BWpPpZ93HLsW15k/dXysRwZtxUrZinXK7g4UHsMROPlFBTztMcTJ
        3dlqlzlpLEquei1Ddgvt3i662r3MVznZRjDkqufrbTmFVB9b5/Nu8rBuCHQc28eWrR57Tao+ytvUADy8
        igt2W2hrJj4syDgyF1/QFo7m25D5bcC8urfmU3W2rLDtVm+t/KB2Wx6UptB0DM3X+D3O4IuEtmZiw4IZ
        CwfqQHZBuedLyPzOT6ZKNs9HxJQ5T0fKlFUnVfZ9TDlVF5TNnFrHaTSP5n17Iq/lYXB6Zzq9pRHITVzQ
        qi6Ru7gtIDcwRBdiFkr5oCypz1Obafcw9WwE8pzadqkPdKRs24N+0qb6gQ6VKS/1OkYKrs+I5ErMNWPh
        OgZyK5BbFUKuTJ40Kmrjei1bHQHVW6iuLVtdHU/ruS6G9jF9+4C2vr5SZ+uDsraPQW40ryOXPRfkRsyb
        CR24LKnmtd3WhcbW8H00r+2pMQhxfaRPqbZxe5RnPTOGllnH1Nu2iZDrxwS5dEHjsCATuIaz6HAaqQGX
        PwZEj45OgQuh1eGXL37jCKbfqBaHQ8g9eGhEDa5zKXQ/A+glbvqCx93AX2OM7yJ9CngP+Ez6/QaIbSC7
        6jHpgxx962E9+RGe1z2DuouFtmbiYy6NUduPlMhdqi9oYgzKH2Ehey9cvnrrRcs7GdsP7abnDN/BzuIz
        GoB2GMBlFz3r2gl/fGgX6TzMY1T5YZneCyanZxTcXwwIUc9PV+27WoexuU8IdGie2zAH9PIfbn/2Km8D
        2YNT8mLU/5rGREo4eOHy7loH6PTynag/4+0Ym9xoPW630HWeS4PL4ihF3cnWiWuDxbWO5guof0WMPjj/
        bEdaIC9/M8NiC9SzwUhXpMUL6h25fh43l09dv08wzq3SZaBA51LongU+BvpeeEYdeTuN9067Cn/lvXV5
        5xyuM0ftegUgd5ytmIzj8kJuZcOCosBpWdyR/fQKGQVynI2+BXgL3vElqWVpl/Rrv+Kk9MWiisHk0uQM
        mVMNckY906oWpcdggc1/Y+Z6YQHzSxNLq4I9Vf4qbL0zO7RLap3IGtzPPgM7yHOL0cOCs19TCQt+txAC
        BuCod4Oj3qoKuqMryFO9/OulWGxxOyag573St+gPCzG5bkEO9Zy3iboX1OH2PL8TuKlN7xr8O9ctuzG4
        H8XnO7P/MTZBUNdtlUVw9nVWunT2va7zeTIcRgwL0VaMkd+YXXAMNxHsuVyhDXVa5g9khy+XkdKCBVPc
        fsv2xZhrkxsBfeiBfHhz/wMmiU87bi+LD1F+CPgg6Fvm78KO7dIrLW6s+7CmQTaM6LkSFixKJZe2YnGj
        guMQFoyQkJRDi2Tw9+J+jTw3AryfSOr7pgxIJc99BunQz3BB55Hs5wekV7/gwF8GHexm0v1B0gieSz/E
        0wsajyEpkVsW4R1aAmg/MbeauHLTt8eq/Eqgrz/IbRBz+4G57hX1PsE8V6D9ccDESwO9uCUcYa4qyAl+
        kuynYHLHuP11Y0hK5OJK6j3Xx0AJC6JIiwFuiY3eUl1PBh92fSzoKj2A3BLkyrgu5dAjeZ7rbVwcg4tl
        ILQrKfNvA7R3dePoWDRvlT/X7l3V5wjQvwlw+1o7f4jxwkIwFpF7dKm+ifCxVqEk57+Dzk4ZzsuWFX5h
        gz7VV+vKOMM9186DPB/MGhjzRLs3hGAIdO63fRhYFOofzFb7P0WD+i7w+74+3E/TUcmNdws8JnmukKuM
        s4JJncEHs//+ExnNCC4Q7bLYDoPesfquzxBySSeeh9JwTtydFbfidjT5B1F4N+bNP/L9AJR/BaQPyhE+
        y/6RFy9zJObF7e+InmvHJPSc58oFTZhnCPvO4DfiTXggL95ARt8BXYml2m+tmEuL1Hks6vkxBm2xXge+
        nfWul1FEaM9d5f9nxiDd24e9adTp8Q3TG3YOlxeM5bl+DE4xjpBLFyQ+oiFgyKdo++Zaf1tqVUt0O/oc
        G6t9q8RuoSy+Bh26LT0NA9w9PlLM8aHMRzgIvOnGIWPFjjLv+7EE6l52C2KdE63y6uTtshf38c9bMJ/b
        j/Mc9TyO3FH3uTKWkNzqEbl8QdOrvTSyEht8eO65QkZx0nJ3YjcFF7d/+qM6pskEILfPczsri/DefCva
        BS6PxV6HlPawZ7BXvXih3EMHaz/wDxjvx0jvw1U8DA/ujHmX7XTPGFLk34yboKDflpUduPXFRdis02Nk
        z9V9rls7gcndVvFW7Lda6ckB4VjolTKEkx+T9+XfgQH0daKL6SdPXl76M1qM3+9Cp5SWNQWL3YM+dFr/
        qnPM3FHpz6YSP5+CbfugTweEbP1+trpFWpzg9vwi1L8P3JOthltn9HX7XeNpnOeYuzR6WJCQQIAT7s+2
        4XYSE9WP6HzMyL+brZobHr676dLDEjqVqf1H8ytfkUYn7R7fqdFrm+siFzFdyT2ZPbtDagcLwlAbur8g
        ezHPW61qMbwmPHk5OcEPpf0D4BJp8YL+9/o1MzGe3DEe3Bhy6aMWQVjg2MPEvRZfxNrlDjLoUR0A+Y/p
        dJZmJ09fCR1c4av8bCosDBLo78WYRO5LuFpfkv3s69LSL9DdDiyLndSn7wka6q4j+2pbi8ezI5dKq5ML
        VvinWq+4dXvHGv2CJtzpnI5cfZ4rlWxMVbwBrIbABSvauKPf2/16gLtlfgX4u4b4PsblXQTy9Jy4RIrw
        Q3G3uxtnQoG6b2Bseo3gfZ4fZKDuo7653fxvq41uzOIT1J/o06vy17ye8+DRL2hmPhqrdRTkbnO3v3XM
        ZcipwkGe8lpOwBkVIa7T8pBxEjpYPI1POxZz45EaI1Vn0NTGscICjVeP6WLuSrENk8vvFrSRJlKYei1r
        XvV8m5Y1T/UC34fykmrZ65rUjhnPE7Qhb+s5b+o8tBynQG3viORSWNAxAczdKpf2Y3tEnst/C5MJRoEY
        GixoQF4XH5QlH0PbPLmS+vkIiTy1x7oe1Bbp1eXRPVfHk7RVFvuz+SNCLk8gsHlfp8bYuiiv5WT/RJ2t
        t+2UVwzSSelZnUF1cV7LY5Fr7tAELfrGzXyPni0IuQqaKCibOjaM8rYs7aynZUkt/LjxWNLu6xL164ad
        I4FgHq9L5I65z3VjYS+9P2sf4S9d4HaTGtEwMHWdfB0NktLxoDqF1bH1Whf3sWVbn4C1qa9eYdoH6QPg
        4R1cPBeEtmbSFxYc2hQW+Oagym8G6I9576Phc4BBdsT1a9k7rN22UT5/Deu/NfuvG4S1htLnuQ7tsiuf
        Hnx+f9Za3jnXXllcwP3/FxC7F+bLXXPZo32PrNcW9Vx7pgTkzmR0seQywRQe8j+0qxm540sQcwHx4PbR
        NchdqBYRj4uFbcf2bCPgIrYw/8Rl0rrxMv/4JVn76Svm2k9fvj489dW5+f/4Mj+/3XDxnkvE1gS3h37u
        9V/4QncbgvyHUKYHO/R3NPrNwF9lv5jwP/xICOahn0adgLFvjQD6Ad9TiHuXph5XTlTisCBo94oh5B7n
        P8tEr6fSI7yNf2u9tcJ/jgkevlgbODVX5j5IG8Z4cb7aMfyvE+PKIHLLYeT6j1mQsbogehK18S9WgxR+
        EK5zulRg81r2dSHxGOMTYH03BesVH3PVBod21cRzWZmMBojcKby1jjnoD5liqJvXE5fyXG6Pyk7nbKda
        Ch/kTlqYXH2eq/PSbqGJ57LBdSd4wvTIlTl9vg+D2qZNbirmDvtAvI+5ZKguYsqeK3PWeYvaphqRDv1+
        91yRW3UbkEueYzCdmAty45BAIAL76hJ6dd8phgUzL2zqlMPI9Rc0p+xwDsJCI5CN1k6pmya5NKdyxSQ3
        ITcy+PNJ7gBM84IWz91r5LlspBpLf9eaYlgI506WdTGp/LRjbmBTkwsad6BTzHWcbsyVua3hMfoWZfLT
        3i2ENjX1XFogx7Dp7Rb4gArYWEk1b8tcZ/J13bmJuZxfahJzqYOC73rOUcxVw+PUoraTMe0LmrWjmeeS
        ogAdp0aunzOc3+f1jErmfXnKngsIuZ1q2D+iS5ELTC/mhvMOhHqrLdftU4y5wbz0l4gh5AYXNDkiSKdG
        LnsAzQlj49Ta5Oukncs+PQcXNGdHuywakqtGAxMJCzgrsuM3kGE16D0GSo9dS8+RD9g5k7BkJsGEn8WB
        uiyYR7F6TZad/Pr4D9STMXctcu1uQTshPza5//nn8Mz8ZuB+4MEkKhjLXhDOnUw1n9SlMJYvJ+dgFN9D
        ujd7VGwbRfo8183bHvq/Kf2DG6fMKQBjxiJ3foU/z/eejufhCTF1XF7LQxMw5Pa1RYAtL2WH1/nndCsx
        uTJue+i/rrXk6kXDGTOe5/5siTyXPxswHDExDcpMJqWxjqSebJfCDvp9799mz1wlxo0gllwzx3DPtbsF
        byQZNP4FrV0V9HLzL92Y4fh1XutTbRYpPakPbI9TJvfwfDnmn4FicmX8TrnU8IJGRjLQaUK7BcRC+piE
        +6qIzkHGqdfpnEG71HFZ64y+Ta1uPB7KmPtt7EWHv4jdRJRcO6+zuQm5pKgdidwJ3UTwOxb5HcCnnig/
        V5xKuzdey7YOCHRjmHr+Ekq+LzvREmPGECaXdgs8rp2jqefSApxxMGoy5ELml79MBP+oHl/SFNjoRL0n
        ztSlxpE6nHkUZ++dP4Xt2CTEfuI1sKHRHRop0pHQNH8ZxtHvGUYGrqTd7J/dJ1zaPX7h5X+9YT7VOU09
        I0Um2xXqBX3qOsy1gvn53bRWuUin9AFr27pR5d8Cue/6+SgF2kOf58YxVzp5Q4fB6mk/rnOEwSg6LW/h
        edwrWPSCoPwAOyLJl11fP6ZvJ5i2ofWIs2X3Elpb9tOv0lnzEOrd5wWsni9LfyoHOjpunAqgi7EbhAUe
        FJ01DQaSctxm+3C+vw6T06en3G+j/q1NC6XPrCD+mn62jx+bUs0b2H62jXX5ZoIO6AEm1sX7v4TH0Se+
        jJ6kWk6lKfgx6jzGHxJ3lkFumT8QDKLxbUKAAS90qkV3ivauppuLx7yhEwSIpTh739yhC3lpyNNHMU5P
        ej0ebv/c98WTQGAUvbCX/iqHNwwpH3WDvjrpo0dWAAMI92c991mbdm+RXvJ+NZxnAHTMVFnzMj/mWF3o
        7dI4S29fvtinr3ZSqn213eu58eq6SFdSjH+6vbI49HsR2QVH+WMVdLo+g4FWBgGE0FfqRsUj7XKn28i7
        +LsHdYi/ZCjABmuqCzQL8nW2TKmrw1jvdHqL/vXUTq9LXvuEzL1uYNxlIMkDATr0kech8fZciouHd4Gg
        +kKjpNmyrR+gg3Ho84g305gzEVk4skTx9wmcESFp6wTGODiV3+ieb9Jxb8C/7k938kYFl+m0l3xcduHg
        +ZbE2ZkkBATtBc54gpXEmEyOr9rGxNLbORv/w+fzWTq9PfTawN0ID/XHNT2xAg4dWuZQQL/J/cYsHDQQ
        bM8o/j4VEKpQUoVg6BHuz6b43sZ5LyCMPmDxpg8B7L3ixcaboXeqs7J7ff+KYCZMMP2U38VfJlZIZrg4
        C5jv0c6kubj97z0cf63HAqinOHvr7AI2hnRKjr/us1UKFw4ebD+59geNZ7KGdMqCPmn1ttt6sde+iD3x
        LM5OShAadsNjT4DYZ4C+z1p9PiTL/h8y/fMf2dIBgwAAAABJRU5ErkJggg==
</value>
  </data>
</root>